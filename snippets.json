{
    "For Loop": {
        "prefix": [
            "for"
        ],
        "body": [
            "var ${1:i} = 0;",
            "for(${2:j} in Iter.range(${3:0, 10})) {",
            "\t$0",
            "\t${1} += ${2};",
            "};"
        ],
        "description": "A for loop."
    },
    "Simple Type": {
        "prefix": [
            "type"
        ],
        "body": [
            "type ${1:Name} = ${2:declaration};"
        ],
        "description": "Simple type declaration"
    },
    "Object Type": {
        "prefix": [
            "type-obj"
        ],
        "body": [
            "type ${1:Name} = {",
            "\t${2:attribute} : ${3:Type};",
            "};"
        ],
        "description": "an object type block"
    },
    "Type Variant": {
        "prefix": [
            "type-variant"
        ],
        "body": [
            "type ${1:Name} = {",
            "\t#${2:Attribute};",
            "};"
        ],
        "description": "a variable type block"
    },
    "Mutable Variable": {
        "prefix": "var",
        "body": [
            "var ${1} = ${2};"
        ],
        "description": "declares a mutable variable"
    },
    "Immutable Variable": {
        "prefix": "let",
        "body": [
            "let ${1} = ${2};"
        ],
        "description": "declares an immutable variable"
    },
    "Simple Function": {
        "prefix": [
            "func"
        ],
        "body": [
            "func ${1:name} (4{2:arg} : ${5:type}) : ${4:returnType} {",
            "\t${5};",
            "};"
        ],
        "description": "Simple function declaration"
    },
    "Public Function": {
        "prefix": [
            "public-func"
        ],
        "body": [
            "public func ${1:name} (4{2:arg} : ${5:type}) : async ${4:returnType} {",
            "\t${5};",
            "};"
        ],
        "description": "Public function declaration"
    },
    "Import": {
        "prefix": [
            "import"
        ],
        "body": [
            "import ${1:Module} \"mo:base/${1}\";"
        ]
    }
}
