<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string>Matt Alexander - matt@queg.net</string>
	<key>fileTypes</key>
	<array>
		<string>Motoko</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~M</string>
	<key>name</key>
	<string>Motoko</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#shebang-line</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attribute</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storage-type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#boolean</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>access-level-modifier</key>
		<dict>
			<key>comment</key>
			<string>access-level-modifier</string>
			<key>match</key>
			<string>\b(public|system|private)\b</string>
			<key>name</key>
			<string>keyword.other.access-level-modifier.motoko</string>
		</dict>
		<key>arithmetic-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+|\-|\*|\/)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.motoko</string>
		</dict>
		<key>array-type</key>
		<dict>
			<key>begin</key>
			<string>\b(Array)(&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.array.motoko</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.array.begin.motoko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.array.end.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.array.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>assignment-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+|\-|\*|\/|%|&lt;&lt;&gt;?|&lt;?&gt;&gt;|&amp;|\^|\||&amp;&amp;|\|\|)?=(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.assignment.motoko</string>
		</dict>
		<key>attribute</key>
		<dict>
			<key>comment</key>
			<string>attribute</string>
			<key>name</key>
			<string>meta.attribute.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>((@)(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B))(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.attribute.motoko</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.motoko</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute-arguments.begin.motoko</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.attribute.arguments.motoko</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute-arguments.end.motoko</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.attribute.motoko</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.motoko</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@)(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B))</string>
				</dict>
			</array>
		</dict>
		<key>bitwise-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(&amp;|\||\^|&lt;&lt;&gt;?|&lt;?&gt;&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.bitwise.motoko</string>
		</dict>
		<key>block-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.begin.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Block comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.end.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.motoko</string>
		</dict>
		<key>boolean</key>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>keyword.constant.boolean.motoko</string>
		</dict>
		<key>branch-statement-keyword</key>
		<dict>
			<key>name</key>
			<string>keyword.control.branch.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#if-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#switch-statement-keyword</string>
				</dict>
			</array>
		</dict>
		<key>code-block</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.code-block.begin.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>code-block</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.code-block.end.motoko</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>comment</key>
			<string>All comment types</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#documentation-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#in-line-comment</string>
				</dict>
			</array>
		</dict>
		<key>comparative-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])((=|!)==?|(&lt;|&gt;)=?|~=)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.comparative.motoko</string>
		</dict>
		<key>control-transfer-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>control-transfer-statement</string>
			<key>match</key>
			<string>\b(continue|break|return)\b</string>
			<key>name</key>
			<string>keyword.control.transfer.motoko</string>
		</dict>
		<key>custom-operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=[\s(\[{,;:])([/=\-+!*%&lt;&gt;&amp;|\^~.]++)(?![\s)\]},;:])</string>
					<key>name</key>
					<string>keyword.operator.custom.prefix.unary.motoko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![\s(\[{,;:])([/=\-+!*%&lt;&gt;&amp;|\^~.]++)(?![\s)\]},;:\.])</string>
					<key>name</key>
					<string>keyword.operator.custom.postfix.unary.motoko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=[\s(\[{,;:])([/=\-+!*%&lt;&gt;&amp;|\^~.]++)(?=[\s)\]},;:])</string>
					<key>name</key>
					<string>keyword.operator.custom.binary.motoko</string>
				</dict>
			</array>
		</dict>
		<key>declaration</key>
		<dict>
			<key>comment</key>
			<string>declaration</string>
			<key>name</key>
			<string>meta.declaration.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#import-declaration</string>
				</dict>
				<!-- <dict>
					<key>include</key>
					<string>#function-declaration</string>
				</dict> -->
			</array>
		</dict>
		<key>declaration-modifier</key>
		<dict>
			<key>comment</key>
			<string>declaration-modifier</string>
			<key>match</key>
			<string>\b(class|object|type|shared)\b</string>
			<key>name</key>
			<string>keyword.other.declaration-modifier.motoko</string>
		</dict>
		<key>dictionary-type</key>
		<dict>
			<key>begin</key>
			<string>\b(Dictionary)(&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.dictionary.motoko</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.dictionary.begin.motoko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.dictionary.end.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.dictionary.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>documentation-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.documentation.begin.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Documentation comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.documentation.end.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.documentation.motoko</string>
		</dict>
		<key>floating-point-literal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.floating-point.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>floating-point-literal -&gt; (decimal-literal)(decimal-fraction)?(decimal-exponent)?</string>
					<key>match</key>
					<string>\b([0-9][0-9_]*)(\.([0-9][0-9_]*))?([eE][+\-]?([0-9][0-9_]*))?\b</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>floating-point-literal -&gt; (hexadecimal-literal)(hexadecimal-fraction)?(hexadecimal-exponent)</string>
					<key>match</key>
					<string>\b(0x\h[\h_]*)(\.(0x\h[\h_]*))?([pP][+\-]?(0x\h[\h_]*))\b</string>
				</dict>
			</array>
		</dict>
		<key>function-body</key>
		<dict>
			<key>comment</key>
			<string>function-body</string>
			<key>name</key>
			<string>meta.function-body.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code-block</string>
				</dict>
			</array>
		</dict>
		<key>function-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(func)\s+(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+)\s*(?=\(|&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.motoko</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.type.function.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function-declaration</string>
			<key>end</key>
			<string>(?&lt;=\})</string>
			<key>name</key>
			<string>meta.function-declaration.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#generic-parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-result</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-body</string>
				</dict>
			</array>
		</dict>
		<key>function-result</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\-&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-result.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function-result</string>
			<key>end</key>
			<string>\s*(?=\{)</string>
			<key>name</key>
			<string>meta.function-result.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
		</dict>
		<key>generic-parameter-clause</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.generic-parameter-clause.begin.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>generic-parameter-clause</string>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.generic-parameter-clause.end.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.generic-parameter-clause.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>comment</key>
			<string>identifier</string>
			<key>match</key>
			<string>(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B)</string>
			<key>name</key>
			<string>meta.identifier.motoko</string>
		</dict>
		<key>if-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>if-statement</string>
			<key>match</key>
			<string>\b(if|else)\b</string>
			<key>name</key>
			<string>keyword.control.if.motoko</string>
		</dict>
		<key>import-declaration</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.motoko</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.motoko</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.type.module.import.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>import-declaration</string>
			<key>match</key>
			<string>\b(import)\s+(?:(class|var|func)\s+)?((?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+)(?:\.(?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+))*)</string>
			<key>name</key>
			<string>meta.import.motoko</string>
		</dict>
		<key>in-line-comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.double-slash.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>In-line comment</string>
			<key>match</key>
			<string>(//).*</string>
			<key>name</key>
			<string>comment.line.double-slash.motoko</string>
		</dict>
		<key>increment-decrement-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+\+|\-\-)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.increment-or-decrement.motoko</string>
		</dict>
		<key>integer-literal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>binary-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0b[01][01_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.binary.motoko</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>octal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0o[0-7][0-7_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.octal.motoko</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>decimal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)([0-9][0-9_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal.motoko</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>hexadecimal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0x\h[\h_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.motoko</string>
				</dict>
			</array>
		</dict>
		<key>resolved-type</key>
		<dict>
			<key>comment</key>
			<string>Resolved types</string>
			<key>match</key>
			<string>\b[A-Z].*?\b</string>
			<key>name</key>
			<string>support.type.motoko</string>
		</dict>
		<key>keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#branch-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#control-transfer-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#async-await-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator-declaration-modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#declaration-modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#access-level-modifier</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>declaration keyword</string>
					<key>match</key>
					<string>\b(actor|and|class|func|import|let|module|not|or)\b</string>
					<key>name</key>
					<string>keyword.declaration.motoko</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>statement keyword</string>
					<key>match</key>
					<string>\b(assert|break|case|continue|debug|debug_show|else|if|ignore|in|for|label|null|return|switch|while|loop|try|throw|catch|finally|do|to_candid|from_candid|with)\b</string>
					<key>name</key>
					<string>keyword.statement.motoko</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>other keyword</string>
					<key>match</key>
					<string>\b(flexible|query|stable|composite)\b</string>
					<key>name</key>
					<string>keyword.other.motoko</string>
				</dict>
			</array>
		</dict>
		<key>literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#integer-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#floating-point-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nil-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#char-literal</string>
				</dict>
			</array>
		</dict>
		<key>logical-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(!|&amp;&amp;|\|\|)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.logical.motoko</string>
		</dict>
		<key>loop-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>loop-statement</string>
			<key>match</key>
			<string>\b(while|repeat|for|in|loop)\b</string>
			<key>name</key>
			<string>keyword.control.loop.motoko</string>
		</dict>
		<key>async-await-keyword</key>
		<dict>
			<key>comment</key>
			<string>async-await-literal</string>
			<key>match</key>
			<string>\b(async|await)\b</string>
			<key>name</key>
			<string>keyword.async-await.motoko</string>
		</dict>
		<key>null-literal</key>
		<dict>
			<key>comment</key>
			<string>null-literal</string>
			<key>match</key>
			<string>\bnull\b</string>
			<key>name</key>
			<string>constant.null.motoko</string>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comparative-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#assignment-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logical-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#remainder-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#increment-decrement-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#overflow-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bitwise-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arithmetic-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ternary-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-casting-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#custom-operator</string>
				</dict>
			</array>
		</dict>
		<key>optional-type</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.optional.motoko</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.optional.begin.motoko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.optional.end.motoko</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(Optional)(&lt;)</string>
			<key>name</key>
			<string>meta.optional.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>overflow-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\&amp;(\+|\-|\*|\/|%)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.overflow.motoko</string>
		</dict>
		<key>parameter-clause</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function-arguments.begin.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>parameter-clause</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function-arguments.end.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameter-clause.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>primitive-type</key>
		<dict>
			<key>comment</key>
			<string>Primitive types</string>
			<key>match</key>
			<string>\b(Blob|Bool|Char|Float|(Int|Nat)(8|16|32|64)?|Principal|Text|Error)\b</string>
			<key>name</key>
			<string>support.type.motoko</string>
		</dict>
		<key>protocol-composition-type</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.protocol.motoko</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.protocol.begin.motoko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.protocol.end.motoko</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(protocol)(&lt;)</string>
			<key>name</key>
			<string>meta.protocol.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>range-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\.\.(?:\.)?(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.range.motoko</string>
		</dict>
		<key>remainder-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\%(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.remainder.motoko</string>
		</dict>
		<key>shebang-line</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.shebang.motoko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Shebang line</string>
			<key>match</key>
			<string>^(#!).*$</string>
			<key>name</key>
			<string>comment.line.shebang.motoko</string>
		</dict>
		<key>storage-type</key>
		<dict>
			<key>match</key>
			<string>\b(var|func|let|class|module|actor)\b</string>
			<key>name</key>
			<string>storage.type.motoko</string>
		</dict>
		<key>string-literal</key>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.motoko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.literal.string.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([0tnr\"\'\\]|x\h{2}|u\h{4}|U\h{8})</string>
					<key>name</key>
					<string>constant.character.escape.motoko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\"|\\)</string>
					<key>name</key>
					<string>invalid.illegal.motoko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(.)</string>
					<key>name</key>
					<string>string.quoted.double.motoko</string>
				</dict>
			</array>
		</dict>
		<key>char-literal</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.motoko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.motoko</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.literal.char.motoko</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([0tnr\"\'\\]|x\h{2}|u\h{4}|U\h{8})</string>
					<key>name</key>
					<string>constant.character.escape.motoko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\'|\\)</string>
					<key>name</key>
					<string>invalid.illegal.motoko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(.)</string>
					<key>name</key>
					<string>string.quoted.single.motoko</string>
				</dict>
			</array>
		</dict>
		<key>switch-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>switch-statement</string>
			<key>match</key>
			<string>\b(switch|case)\b</string>
			<key>name</key>
			<string>keyword.control.switch.motoko</string>
		</dict>
		<key>type</key>
		<dict>
			<key>comment</key>
			<string>type</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#primitive-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#resolved-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#optional-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol-composition-type</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.mo</string>
	<key>uuid</key>
	<string>7efa1168-97c3-4433-8dd7-15b99bf3bb53</string>
</dict>
</plist>
